#pragma once

#include <string>

const std::string basic_shader = "//#vertexShader\n"
"#version 330 core\n"
"layout(location = 0) in vec2 aPos;\n"
"layout(location = 1) in vec2 aTex;\n"
"out vec2 o_TexCoord;\n"
"void main()\n"
"{\n"
"	o_TexCoord = aTex;\n"
"	gl_Position = vec4(aPos, 0.0f, 1.0f);\n"
"}\n"
"//#fragmentShader\n"
"#version 330 core\n"
"in vec4 o_Color;\n"
"in vec2 o_TexCoord;\n"
"out vec4 fragColor;\n"
"void main()\n"
"{\n"
"	fragColor = o_Color;\n"
"}";

const std::string yuv_rgb = "//#vertexShader\n"
"#version 330 core\n"
"layout(location = 0) in vec2 aPos;\n"
"layout(location = 1) in vec2 aTex;\n"
"out vec2 o_TexCoord;\n"
"void main()\n"
"{\n"
"    o_TexCoord = aTex;\n"
"    gl_Position = vec4(aPos, 0.0f, 1.0f);\n"
"}\n"
"//#fragmentShader\n"
"#version 330 core\n"
"out vec4 FragColor;\n"
"in vec2 o_TexCoord;\n"
"uniform sampler2D texture_y;\n"
"uniform sampler2D texture_u;\n"
"uniform sampler2D texture_v;\n"
"vec3 yuv_to_rgb(float y, float u, float v)\n"
"{"
"    float rTmp = y + ( 1.370705 * ( v - 0.5 ) );\n"
"    float gTmp = y - ( 0.698001 * ( v - 0.5 ) ) - ( 0.337633 * ( u - 0.5 ) );\n"
"    float bTmp = y + ( 1.732446 * ( u - 0.5 ) );\n"
"    vec3 rgb;\n"
"    rgb.x = clamp(rTmp, 0.0f, 1.0f);\n"
"    rgb.y = clamp(gTmp, 0.0f, 1.0f);\n"
"    rgb.z = clamp(bTmp, 0.0f, 1.0f);\n"
"    return rgb;\n"
"}\n"
"void main() {"
"    float y = texture(texture_y, o_TexCoord).r;\n"
"    float u = texture(texture_u, o_TexCoord).r;\n"
"    float v = texture(texture_v, o_TexCoord).r;\n"
"    vec3 rgb = yuv_to_rgb(y, u, v);\n"
"    FragColor = vec4(rgb, 1.0f);\n"
"}";
